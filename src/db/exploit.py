from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, ForeignKey, String, Text, Boolean
from sqlalchemy.orm import relationship

from src.db.exploit_type import ExploitType

Base = declarative_base()


class Exploit(Base):
    __tablename__ = 'exploit'

    # Integers
    id = Column(Integer, primary_key=True, autoincrement=True, nullable=False)
    type_id = Column(Integer, ForeignKey(ExploitType.id), nullable=False)
    type = relationship(ExploitType)

    # Strings
    name = Column(String(128), nullable=False)
    version = Column(String(64), nullable=False)
    url = Column(String(128), nullable=False)
    exploit_url = Column(String(128), nullable=False)
    nonce_url = Column(String(128), nullable=True)
    request_method = Column(String(12), nullable=False, default='GET')

    # Text
    exploit_body = Column(Text, nullable=True)
    exploit_headers = Column(Text, nullable=True)
    validator = Column(Text, nullable=False)

    # Booleans
    is_url_encode = Column(Boolean, nullable=False, default=False)
    is_authenticated = Column(Boolean, nullable=False, default=False)
